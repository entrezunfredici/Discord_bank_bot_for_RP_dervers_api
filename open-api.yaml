#open API
openapi: 3.0.3
info:
  title: PICSOU BANK Bot
  derciption: "this api manage one discord bank bot for RP servers in Discord"
  vertion: "1.0.0"
#server configuration
server:
  -url: '{protocol}://{server}'
  variables:
    protocol:
      enum:
        - http
        - https
      default: http
    serveur:
      defaults: localhost:8000
#differents tags of this project
tags:
  - name: account
    description: contains money of contacts
paths:
  #accounts
  # /account/beneficiary:{beneficiary_id}:
  #   get:
  #     tags:
  #       - account
  #     summary: get accounts of one beneficiary
  #     operationId: getAccountByBeneficiaryId
  #     parameters:
  #       - name: beneficiary_id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #     responses:
  #       "200":
  #         description: account fetched succesfully
  #       "404":
  #         $ref: "#/components/responses/NotFound"
  #   delete:
  #     tags:
  #       - account
  #     summary: account deletion with beneficiary_id
  #     operationId: deleteAccountsByBeneficiaryID
  #     parameters:
  #       - name: beneficiary_id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #     responses:
  #       "200":
  #         description: account deleted succesfully
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required: [ success ]
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                   default: true
  #       "404":
  #         $ref: "#/components/responses/NotFound"

  # /account/Id:{id}:
  #   get:
  #     tags:
  #       - account
  #     summary: get account by id
  #     operationId: getAccountById
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #     responses:
  #       "200":
  #         description: account fetched succesfully
  #       "404":
  #         $ref: "#/components/responses/NotFound"
  #   delete:
  #     tags:
  #       - account
  #     summary: account deletion with id
  #     operationId: deleteAccountById
  #     parameters:
  #       - $ref : '#/components/parameters/idInPath'
  #     responses:
  #       "200":
  #         description: account deleted succesfully
  #         content:
  #           application/json:
  #             schema:
  #               type: objects
  #               required: [success]
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                   default: true
  #       "400":
  #         $ref: "#/components/responses/NotFound"

  /account/login:
    post:
      tags:
        - account
      summary: Login to an account
      requestBody:
        content:
          application/json:
            schema:
              required: [id, password]
              properties:
                id:
                  type: int
                password:
                  type: string
      responses:
        "200":
          description: "you are connected"
        "404":
          description: "invalid identifier"
        "500":
          description: "Server ERROR"

  /account/add:
    post:
      tags:
        - account
      summary: create an account
      requestBody: 
        content:
          application/json:
            schema:
              required: [password, beneficiary_id]
              properties:
                password:
                  type: string
                beneficiary_id:
                  type: integer
                balance:
                  type: float
      responses:
        "201":
          description: "OK"

  # /account/transaction:
  #   post:
  #     tags:
  #       - account
  #     summary: Do one account transactions
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             required: [id, userId, sum, type]
  #             properties:
  #               yourid:
  #                 type: int
  #               userId:
  #                 type: int
  #               sum:
  #                 type: float
  #               type:
  #                 type: string
  #     responses:
  #       "201":
  #         description: "OK"
  #       "404":
  #         description: "invalid identifier"
  #       "500":
  #         description: "Server ERROR"

  # /account/quickTransaction:
  #   post:
  #     tags:
  #       - account
  #     summary: Do one account transactions
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             required: [id, cibleId, userId, sum]
  #             properties:
  #               yourid:
  #                 type: int
  #               cibleId:
  #                 type: int
  #               userId:
  #                 type: int
  #               sum:
  #                 type: float
  #     responses:
  #       "201":
  #         description: "OK"
  #       "404":
  #         description: "invalid identifier"
  #       "500":
  #         description: "Server ERROR"

components:
  parameters:
    idInPath:
      required: true
      name: id
      in: path
      schema:
        type: integer
  responses:
    ResourceCreated:
      description: "The resource has been created"
      content:
        application/json:
          schema:
            type: object
            required : [ success, id ]
            properties:
              success:
                type: boolean
                default: true
                example: true
              id:
                type: integer
                example: 1
                description: "The id of the ressource created"
    NotFound:
      description: "The resource specified is not found"
      content:
        application/json:
          schema:
            type: object
            required: [ success, message ]
            properties:
              success:
                type: boolean
                default: false
                example: false
              message:
                type: string
                default: ""
                example: "This ressource with this id is not found"
    InvalidBody:
      description: "The body sent to the request is invalid"
      content:
        application/json:
          schema:
            type: object
            required: [ success, message ]
            properties:
              success:
                type: boolean
                default: false
                example: false
              message:
                type: string
                default: ""
                example: "Please make sure that all args on the body are ok"
    InternalServerError:
      description: "An internal server error occurred"
      content:
        application/json:
          schema:
            type: object
            required: [ success, message ]
            properties:
              success:
                type: boolean
                default: false
                example: false
              message:
                type: string
                default: "An unknown server error occurred"
                example: "An unknown server error occurred"
