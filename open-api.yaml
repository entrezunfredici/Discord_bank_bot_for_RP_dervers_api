#open API
openapi: 3.0.3
info:
  title: PICSOU BANK Bot
  description: "this api manage one discord bank bot for RP servers in Discord"
  version: "1.0.0"
#server configuration

#tags
tags:
  - name: account
    description: contains money of contacts

paths:
  #contacts
  /contact/login:
    post:
      tags:
        - contact
      summary: Login as contact
      requestBody:
        content:
          application/json:
            schema:
              required: [username, password]
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: "connect sucessfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountlist?"
        "404":
          description: "Contact not found"
        "500":
          description: "Server ERROR"

  /contact/register:
    post:
      tags:
        - contact
      summary: Add new contact
      requestBody:
        content:
          application/json:
            schema:
              required: [username, password, role]
              properties:
                  username:
                    type: string
                  password:
                    type: string
                  role:
                    type: string
                  account_id:
                    type: int []
                  partner_ids:
                    type: int []
      responses:
          "201":
            description: "OK"

  /contact/:{username}:
    get: 
      tags:
        - contact
      summary: Get a contact by username
      operationId: getContactByUsername
      parameters:
        - name: username
          in: path
          description: ID du bénéficiaire
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: user fetched successfully
        "404":
          description: "NotFound"
          
/contact/delete/:{id}:
    delete:
      tags:
        - contact
      summary: Delete contact by id
      operation: delecteContactById
      responses:
          "200":
            description: Contact deleted successfully
          "404":
            description: "NotFound"

  #partners
  /partner/add:
    post:
      tags:
        - partners
      summary: Add new partnership
      requestBody:
        content:
          application/json:
            schema:
              required: [contactID, contactPartnerID, contactRole, contactPartnerRole]
              properties:
                  contactID:
                    type: int
                  contactPartnerID:
                    type: int
                  contactRole:
                    type: string
                  contactPartnerRole:
                    type: string 
      responses:
        "201":
          description: "OK"

  /partner/contact:{contactID}:
    get: 
      tags:
        - partners
      summary: Get a partnership by contactID 
      operationId: getPartnerByContactID
      parameters:
        - name: beneficiaryId
          in: path
          description: ID du bénéficiaire
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Succès

#accounts
  /accounts/{beneficiaryId}:
    get:
      summary: Récupérer les comptes par ID de bénéficiaire
      parameters:
        - name: beneficiaryId
          in: path
          description: ID du bénéficiaire
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    delete:
      summary: Supprimer les comptes par ID de bénéficiaire
      parameters:
        - name: beneficiaryId
          in: path
          description: ID du bénéficiaire
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Succès

  /accounts/{id}:
    get:
      summary: Récupérer un compte par ID
      parameters:
        - name: id
          in: path
          description: ID du compte
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    delete:
      summary: Supprimer un compte par ID
      parameters:
        - name: id
          in: path
          description: ID du compte
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Succès
  
  /accounts/login:
    post:
      summary: Se connecter à un compte
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [userId, id, password]
              properties:
                userId:
                  type: integer
                id:
                  type: integer
                password:
                  type: string
      responses:
        '200':
          description: Succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
        '400':
          description: Identifiant ou mot de passe incorrect

  /accounts/add:
    post:
      summary: Ajouter un compte
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [beneficiaryId, password]
              properties:
                beneficiaryId:
                  type: integer
                password:
                  type: string
                balance:
                  type: number
      responses:
        '201':
          description: Succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  account:
                    $ref: '#/components/schemas/Account'
        '500':
          description: Erreur serveur

  /accounts/transaction:
    post:
      summary: Effectuer une transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [Id, userId, sum, type]
              properties:
                id:
                  type: integer
                userId:
                  type: integer
                sum:
                  type: number
                type:
                  type: string
      responses:
        '200':
          description: Succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  change:
                    $ref: '#/components/schemas/Account'
        '400':
          description: Mauvaise requête

  /accounts/quickTransaction:
    post:
      summary: Effectuer une transaction rapide
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [id, cibleId, userId, sum]
              properties:
                id:
                  type: integer
                cibleId:
                  type: integer
                userId:
                  type: integer
                sum:
                  type: number
      responses:
        '200':
          description: Succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  exchange:
                    $ref: '#/components/schemas/Account'
        '400':
          description: Mauvaise requête
#components
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          example: 1
        beneficiaryId:
          type: integer
          example: 1
        password:
          type: string
          example: "AzEr5t6-!Tp6"
        balance:
          type: number
          example: 1000
      required:
        - id
        - password
        - beneficiaryId
        - balance

